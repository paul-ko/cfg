; git config --global include.path <path-to-this-file>
[alias]
    ; Null tree
    diff-null = !git diff $(git hash-null)
    hash-null = hash-object -t tree /dev/null

    ; Log
    last = log -1 HEAD
    head-refs = !git log -1 --pretty='%D' | \
                cut -c9- | \
                sed 's/, /\\n/g' | \
                sort

    ; Show
    sn = "show --name-only"

    ; Branches
    current-branch = symbolic-ref --short HEAD
    recent-branches = branch --format='%(HEAD)%(if)%(HEAD)%(then)%(color:green)%(end)%(committerdate:short): %(refname:short)' --sort committerdate

    ; Aliases
    list-aliases = "!git config --get-regexp ^alias | " \
                   "sort | " \
                   "cut -c7- | " \
                   "sed -E 's/\\| +/|g' | " \
                   "awk '{printf \"%20s  \", $1; for (i=2; i<=NF; i++) { printf \" %s\", $i }; printf \"\\n\"}'"
    name-aliases = !git config --name-only --get-regexp ^alias | \
                   grep -oP '(?<=alias\\.).*$' | \
                   sort

    ; Ack
    ack = -c color.grep.linenumber=\"bold yellow\" \
          -c color.grep.filename=\"bold green\" \
          -c color.grep.match=\"reverse yellow\" \
          grep --break --heading --line-number -I
    nack = !git ack --no-index

    ; Misc
    origin-url = "!git remote show origin | grep -oP '(?<=Fetch URL: ).*'"
    prebase = "!if git show-ref --quiet --verify refs/heads/rebase-bkup; then \
                       git branch -D rebase-bkup; \
                fi; \
                git branch rebase-bkup;"
    l = "log --oneline"
    unstage = reset HEAD --

    # Next one is more of a reminder of how to shell out in an alias...
    author-count = "!git log --pretty=format:%an | sort | uniq -c | sort -n"
